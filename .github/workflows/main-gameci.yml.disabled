on:
  push:
    branches:
      - testing-ci-cd

name: Github_Builder

env: 
  NAME: ${{ github.event.repository.name }}

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        lfs: true
        clean: false
        fetch-depth: 0

    - name: Cache Library
      uses: actions/cache@v2.1.4
      with:
        path: |
          Library
        key: ${{ runner.os }}

    - name: Cleanup
      run: |
        rm -f -r Builds
        
    - name: Unity - Builder
      # You may pin to the exact commit or the version.
      # uses: game-ci/unity-builder@c8202c01e7dfe4de0e897b26cb2ca1cc363e4ad4
      uses: game-ci/unity-builder@v2.0-alpha-6
      env:
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
      with:
        # Path to a Namespace.Class.StaticMethod to run to perform the build.
        buildMethod: BuildConfigsManager.BuildCurrentPlatform
    
    
    - name: Compress Build
      run: |
        rm -f ${{ env.NAME }}_WEBGL.zip
        cd Builds/${{ env.NAME }}-webgldots && zip -r -X ../../${{ env.NAME }}_WEBGL.zip .
        
    - uses: actions/upload-artifact@v2
      with:
        name: webgl-build
        path: ${{ env.NAME }}_WEBGL.zip
    
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: webgl-build
          
      - name: unzip
        run: |
          unzip ${{ env.NAME }}_WEBGL.zip -d public
          ls .
          ls $GITHUB_WORKSPACE

      - name: Deploy setup
        run: |
          ls ./public
          mv ./public/InfiniteInvaders.html ./public/index.html
          ls ./public
          
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
    
    
  
